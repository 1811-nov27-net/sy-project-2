<Activity mc:Ignorable="sap sap2010 sads" x:Class="Filling_Payment_and_saving_Order_"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ss="clr-namespace:System.Security;assembly=mscorlib"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Config" Type="InArgument(njl:JObject)" />
    <x:Property Name="orderPlaced" Type="OutArgument(ui:Browser)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>Filling_Payment_and_saving_Order__1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Net</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Plugin.Workflow</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Filling Payment and saving Order#" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ss:SecureString" Name="assetCardNumber" />
      <Variable x:TypeArguments="x:String" Name="secureCardNumber" />
      <Variable x:TypeArguments="ss:SecureString" Name="assetCVV" />
      <Variable x:TypeArguments="x:String" Name="secureCVV" />
      <Variable x:TypeArguments="x:String" Name="orderNumber" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtOrders" />
      <Variable x:TypeArguments="x:Int32" Default="0" Name="counter" />
      <Variable x:TypeArguments="x:String" Name="status" />
    </Sequence.Variables>
    <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="Accessing Orchestrator for 'secure' card info, and filling it out" />
    <ui:BrowserScope Browser="{x:Null}" SearchScope="{x:Null}" TimeoutMS="{x:Null}" BrowserType="IE" DisplayName="Attach Browser 'iexplore.exe Order'" sap2010:WorkflowViewState.IdRef="BrowserScope_1" InformativeScreenshot="e5f4b5d3417c80e70cedc58967f39207" Selector="&lt;html title='Order | Pega Studio Training Web Application' /&gt;" UiBrowser="[orderPlaced]">
      <ui:BrowserScope.Body>
        <ActivityAction x:TypeArguments="x:Object">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_2">
            <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="cardNumber" DisplayName="Get Credential Card Number" sap2010:WorkflowViewState.IdRef="GetRobotCredential_1" Password="[assetCardNumber]" />
            <Assign sap2010:Annotation.AnnotationText="Converting into a string so we can fill it out on the page...making it not secure anymore" DisplayName="Assign Card Number" sap2010:WorkflowViewState.IdRef="Assign_1">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[secureCardNumber]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, assetCardNumber).Password]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:GetRobotCredential TimeoutMS="{x:Null}" Username="{x:Null}" AssetName="cvv" DisplayName="Get Credential CVV" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2" Password="[assetCVV]" />
            <Assign DisplayName="Assign CVV" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[secureCVV]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[new System.Net.NetworkCredential(string.Empty, assetCVV).Password]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:SelectItem ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Select Item Card Type" sap2010:WorkflowViewState.IdRef="SelectItem_1" Item="[Config(&quot;cardType&quot;).ToString]">
              <ui:SelectItem.Items>
                <scg:List x:TypeArguments="x:String" Capacity="4">
                  <x:String>Card Type</x:String>
                  <x:String>Visa</x:String>
                  <x:String>Mastercard</x:String>
                </scg:List>
              </ui:SelectItem.Items>
              <ui:SelectItem.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="cdbf28fb1301906991ac0fe1eaceb7cb" Selector="&lt;webctrl id='card_type' tag='SELECT' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:SelectItem.Target>
            </ui:SelectItem>
            <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Into Security Code" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_1" SendWindowMessages="False" SimulateType="False" Text="[secureCVV]">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="455850a4431792a5bf9ec286a4713dcf" Selector="&lt;webctrl id='security_code' tag='INPUT' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:TypeInto.Target>
            </ui:TypeInto>
            <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" Activate="True" ClickBeforeTyping="False" DisplayName="Type Into Card Number" EmptyField="False" sap2010:WorkflowViewState.IdRef="TypeInto_2" SendWindowMessages="False" SimulateType="False" Text="[secureCardNumber]">
              <ui:TypeInto.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="612caadd5b2cb03809fbc0284bac6c4d" Selector="&lt;webctrl id='card_number' tag='INPUT' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:TypeInto.Target>
            </ui:TypeInto>
            <ui:SelectItem ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Select Item Expiration Month" sap2010:WorkflowViewState.IdRef="SelectItem_2" Item="[Config(&quot;expMonth&quot;).ToString]">
              <ui:SelectItem.Items>
                <scg:List x:TypeArguments="x:String" Capacity="16">
                  <x:String>Expiration Month</x:String>
                  <x:String>January</x:String>
                  <x:String>February</x:String>
                  <x:String>March</x:String>
                  <x:String>April</x:String>
                  <x:String>May</x:String>
                  <x:String>June</x:String>
                  <x:String>July</x:String>
                  <x:String>August</x:String>
                  <x:String>September</x:String>
                  <x:String>October</x:String>
                  <x:String>November</x:String>
                  <x:String>December</x:String>
                </scg:List>
              </ui:SelectItem.Items>
              <ui:SelectItem.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="fa1e736aca6e168c99cafd9d6c4ee832" Selector="&lt;webctrl id='expiry_month' tag='SELECT' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:SelectItem.Target>
            </ui:SelectItem>
            <ui:SelectItem ContinueOnError="{x:Null}" DelayAfter="{x:Null}" DelayBefore="{x:Null}" DisplayName="Select Item Expiration Year" sap2010:WorkflowViewState.IdRef="SelectItem_3" Item="[Config(&quot;expYear&quot;).ToString]">
              <ui:SelectItem.Items>
                <scg:List x:TypeArguments="x:String" Capacity="8">
                  <x:String>Expiration Year</x:String>
                  <x:String>2014</x:String>
                  <x:String>2015</x:String>
                  <x:String>2016</x:String>
                  <x:String>2017</x:String>
                  <x:String>2018</x:String>
                  <x:String>2019</x:String>
                  <x:String>2020</x:String>
                </scg:List>
              </ui:SelectItem.Items>
              <ui:SelectItem.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="46ea4e29297ade8023a2e78168cb4f95" Selector="&lt;webctrl id='expiry_year' tag='SELECT' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:SelectItem.Target>
            </ui:SelectItem>
            <ui:Click DelayBefore="{x:Null}" DelayMS="{x:Null}" ClickType="CLICK_SINGLE" DisplayName="Click Submit to create order" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False" SimulateClick="False">
              <ui:Click.CursorPosition>
                <ui:CursorPosition Position="Center">
                  <ui:CursorPosition.OffsetX>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetX>
                  <ui:CursorPosition.OffsetY>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:CursorPosition.OffsetY>
                </ui:CursorPosition>
              </ui:Click.CursorPosition>
              <ui:Click.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="c87bc39a317aaab79a5ca773405ca457" Selector="&lt;webctrl id='submit_button' tag='INPUT' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:Click.Target>
            </ui:Click>
            <ui:GetValue ContinueOnError="{x:Null}" DisplayName="Get Text Order#" sap2010:WorkflowViewState.IdRef="GetValue_1">
              <ui:GetValue.Target>
                <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" TimeoutMS="{x:Null}" InformativeScreenshot="a0b9b4b4933f809a0405dc42ddfdfc57" Selector="&lt;html title='Order Products | Pega Studio Training Web Application' /&gt;&lt;webctrl tag='B' /&gt;" WaitForReady="INTERACTIVE" />
              </ui:GetValue.Target>
              <ui:GetValue.Value>
                <OutArgument x:TypeArguments="x:String">[orderNumber]</OutArgument>
              </ui:GetValue.Value>
            </ui:GetValue>
          </Sequence>
        </ActivityAction>
      </ui:BrowserScope.Body>
    </ui:BrowserScope>
    <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="Finished filling out payment info" />
    <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[&quot;Here is your order number for reference: &quot; + orderNumber]" />
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" WorkbookPath="ProductOrders.xlsx">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_3">
            <ui:ExcelReadRange AddHeaders="True" DataTable="[dtOrders]" DisplayName="Read Range" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="Orders">
              <ui:ExcelReadRange.Range>
                <InArgument x:TypeArguments="x:String">
                  <Literal x:TypeArguments="x:String" Value="" />
                </InArgument>
              </ui:ExcelReadRange.Range>
            </ui:ExcelReadRange>
            <ui:ForEachRow CurrentIndex="{x:Null}" DataTable="[dtOrders]" DisplayName="For Each Row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
              <ui:ForEachRow.Body>
                <ActivityAction x:TypeArguments="sd:DataRow">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <ui:ExcelReadCell Cell="[&quot;C&quot; + (counter+2).ToString]" DisplayName="Read Cell Status" sap2010:WorkflowViewState.IdRef="ExcelReadCell_1" SheetName="Orders">
                      <ui:ExcelReadCell.Result>
                        <OutArgument x:TypeArguments="x:String">[status]</OutArgument>
                      </ui:ExcelReadCell.Result>
                    </ui:ExcelReadCell>
                    <If Condition="[status =&quot;Succeeded&quot;]" sap2010:WorkflowViewState.IdRef="If_1">
                      <If.Then>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
                          <ui:ExcelWriteCell Cell="[&quot;D&quot; + (counter + 2).ToString]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_1" SheetName="Orders" Text="[orderNumber]" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_6">
                          <ui:ExcelWriteCell Cell="[&quot;D&quot; + (counter + 2).ToString]" DisplayName="Write Cell" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="Orders" Text="Item out of stock or doesn't exist." />
                        </Sequence>
                      </If.Else>
                    </If>
                    <Assign>
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">[counter + 1]</InArgument>
                      </Assign.Value>
                      <sap2010:WorkflowViewState.IdRef>Assign_3</sap2010:WorkflowViewState.IdRef>
                    </Assign>
                  </Sequence>
                </ActivityAction>
              </ui:ForEachRow.Body>
            </ui:ForEachRow>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
    </ui:ExcelApplicationScope>
    <WriteLine DisplayName="Write Line" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="Finished writing order# and exceptions to notes in Product Orders.xlsx" />
    <sads:DebugSymbol.Symbol>d05FOlxTdHVmZlxSZXZhdHVyZVxzeS1wcm9qZWN0LTJcUHJvamVjdDJcRmlsbGluZyBQYXltZW50IGFuZCBzYXZpbmcgT3JkZXIjLnhhbWxLUAOIAg4CAQFYM1g2AgECWwVbogECAV9cBcwBFwIBMc0BBc0BggECAS/OAQXOAaYBAgEszwEFhQIgAgEFhgIFhgKnAQIBA1tcW58BAgFgXIsCXNACAgFeXNsCXOoCAgFcYgvJARYCATLNAVzNAX8CATDOAVzOAaMBAgEtzwGgAc8BtAECASvVAQuCAhYCAQaGAlyGAqQBAgEEYw1j4wECAVhkDWsWAgFTbA1szQECAU9tDXQWAgFKdQ2AAR0CAUeBAQ2FARsCAUOGAQ2KARsCAT+LAQ2gAR0CATyhAQ2xAR0CATmyAQ3AARgCATfBAQ3IARsCATPWAQ3cASECASbdAQ2BAh0CAQdjV2NjAgFbY80BY+ABAgFZaThpggECAVZmOWZLAgFUbFdsXAIBUmy+AWzKAQIBUHI4cnsCAU1vOW9EAgFLdbwBdeUBAgFIfqABfs8BAgFJgwGgAYMB0gECAUaBAaUCgQGyAgIBRIgBoAGIAdABAgFChgGjAoYBtwICAUCLAcMBiwHsAQIBPZ4BoAGeAdIBAgE+oQHCAaEB6gECATqvAaABrwHRAQIBO74BoAG+AdIBAgE4xgE5xgFGAgE0wwGgAcMBhwICATbWATzWAUgCASnZARPZAUICASjWAZ8B1gGnAQIBJ90BPt0BSgIBJOMBE/4BHgIBCOQBFegBKAIBHukBFfQBGgIBDvUBFf0BHgIBCeQBLOQBVAIBIuYBQeYBSQIBIOQBsAHkAbgBAgEf6QEj6QFEAgEP6wEZ7QEkAgEX8AEZ8gEkAgER+gE/+gFMAgEM9wFA9wFJAgEK7AEb7AHUAQIBGPEBG/EB6gECARLsATPsAV0CARzsAcIB7AHRAQIBGuwBtAHsAbwBAgEZ8QEz8QFdAgEV8QHCAfEB5wECARTxAbQB8QG8AQIBEw==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="785,61" />
      <sap2010:ViewStateData Id="GetRobotCredential_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetRobotCredential_2" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="SelectItem_1" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_1" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="TypeInto_2" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="SelectItem_2" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="SelectItem_3" sap:VirtualizedContainerService.HintSize="314,134" />
      <sap2010:ViewStateData Id="Click_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="GetValue_1" sap:VirtualizedContainerService.HintSize="314,106" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="336,1570">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BrowserScope_1" sap:VirtualizedContainerService.HintSize="785,1716" />
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="785,61" />
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="785,61" />
      <sap2010:ViewStateData Id="ExcelReadRange_1" sap:VirtualizedContainerService.HintSize="749,59" />
      <sap2010:ViewStateData Id="ExcelReadCell_1" sap:VirtualizedContainerService.HintSize="697,59" />
      <sap2010:ViewStateData Id="ExcelWriteCell_1" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelWriteCell_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="336,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="697,358" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="697,60" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="719,681">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="749,828" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="771,1051">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ExcelApplicationScope_1" sap:VirtualizedContainerService.HintSize="785,1160" />
      <sap2010:ViewStateData Id="WriteLine_4" sap:VirtualizedContainerService.HintSize="785,61" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="807,3444">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Filling_Payment_and_saving_Order__1" sap:VirtualizedContainerService.HintSize="847,3524" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>